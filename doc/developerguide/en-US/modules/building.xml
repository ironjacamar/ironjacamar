<?xml version="1.0" encoding="UTF-8"?>
<chapter id="building">
  <title>Building</title>

  <section id="prerequisites">
    <title>Prerequisites</title>
    
    <section id="jdk">
      <title>Java Development Kit (JDK)</title>
      <para>You must have one of the following JDKs installed in order to build the project:</para>

      <itemizedlist spacing="compact">
         <listitem>
            <para>Sun JDK 1.6.x</para>
         </listitem>
         <listitem>
            <para>Sun JDK 1.7.x</para>
         </listitem>
      </itemizedlist>

      <para>Remember to ensure that "javac" and "java" are in your path (or symlinked).</para>

      <programlisting>
JAVA_HOME=/location/to/javahome
export JAVA_HOME

PATH=$JAVA_HOME/bin:$PATH
export PATH
      </programlisting>

    </section>

    <section id="ant">
      <title>Apache Ant</title>
      <para>You must have Apache Ant 1.8.2+ installed on your system.</para>
      <para>Remember to ensure that "ant" are in your path (or symlinked).</para>

      <programlisting>
ANT_HOME=/location/to/anthome
export ANT_HOME

PATH=$ANT_HOME/bin:$PATH
export PATH
      </programlisting>

      <para>You may need to set the memory settings for the Apache Ant process like</para>

      <programlisting>
ANT_OPTS="$ANT_OPTS -Xms128m -Xmx512m -XX:MaxPermSize=256m"
export ANT_OPTS
      </programlisting>
    </section>

    <section id="ivy">
      <title>Apache Ivy</title>
      <para>The IronJacamar project uses Apache Ivy for dependency management.</para>

      <para>Apache Ivy is automatically downloaded and included in the development
        environment, so no additional setup is required.</para>

    </section>

    <section id="subversion">
      <title>Subversion</title>
      <para>You must have Subversion 1.5+ installed on your system.</para>
      <para>Remember to ensure that "svn" are in your path (or symlinked).</para>
    </section>
 
  </section>

  <section id="obtainingthesource">
    <title>Obtaining the source code</title>

    <section id="anonsvn">
      <title>Anonymous SVN access</title>
      <para>The anonymous SVN repository is located under:</para>

      <programlisting>
svn co http://anonsvn.jboss.org/repos/jbossas/projects/jboss-jca/trunk/ ironjacamar-trunk
      </programlisting>
      
    </section>

    <section id="developersvn">
      <title>Developer SVN access</title>
      <para>The developer SVN repository is located under:</para>
      
      <programlisting>
svn co https://svn.jboss.org/repos/jbossas/projects/jboss-jca/trunk/ ironjacamar-trunk
      </programlisting>
      
    </section>

    <section id="svnmodules">
      <title>SVN modules</title>
      <para>We have the following modules for the project:</para>
      <itemizedlist>
         <listitem>
            <para>trunk</para>
            <para>The head of development targeting the next upcoming release.</para>
         </listitem>
         <listitem>
            <para>branches/Branch_1_0</para>
            <para>The development targeting the IronJacamar 1.0 releases.</para>
         </listitem>
      </itemizedlist>
    </section>

  </section>

  <section id="compiling">
    <title>Compiling the source code</title>
    <para>In order to build the IronJacamar project you execute:</para>
    <programlisting>
ant &lt;target&gt;
    </programlisting>
    <para>where target is one of</para>
    <itemizedlist>
      <listitem>
        <para>jars</para>
        <para>Builds the JAR archives in the distribution.</para>
      </listitem>
      <listitem>
        <para>test</para>
        <para>Builds the JAR archives in the distribution and runs all the test cases.</para>
      </listitem>
      <listitem>
        <para>module-test</para>
        <para>Builds the JAR archives in the distribution and runs all the test cases for the specified
        module (<code>-Dmodule=&lt;modulename&gt;</code>).</para>
      </listitem>
      <listitem>
        <para>one-test</para>
        <para>Builds the JAR archives in the distribution and runs the specified test case
        (<code>-Dmodule=&lt;modulename&gt; -Dtest=&lt;classname&gt;</code>).</para>
      </listitem>
      <listitem>
        <para>docs</para>
        <para>Builds the API documentation for the project.</para>
      </listitem>
      <listitem>
        <para>aggregated-javadocs</para>
        <para>Builds the Aggregated API documentation for the project.</para>
      </listitem>
      <listitem>
        <para>aggregated-javadocs-api-spi</para>
        <para>Builds the Aggregated API documentation for API/SPI of the project.</para>
      </listitem>
      <listitem>
        <para>sjc</para>
        <para>Builds the standalone environment using IronJacamar/SJC.</para>
      </listitem>
      <listitem>
        <para>release</para>
        <para>Builds a release of the project.</para>
      </listitem>
      <listitem>
        <para>clean</para>
        <para>Cleans the project of temporary files.</para>
      </listitem>
      <listitem>
        <para>clean-cache</para>
        <para>Cleans the Apache Ivy repository.</para>
      </listitem>
    </itemizedlist>
    <para>See the full list of targets in the main build.xml file.</para>

    <para>An example to get the IronJacamar/SJC built and running:</para>
    <programlisting>
ant clean sjc
cd target/sjc/bin
./run.sh
    </programlisting>

  </section>

  <section id="creating_a_patch">
    <title>Creating a patch</title>

    <para>
      Our user guide explains in the "I would like to implement a feature" section how to get 
      started on a writing a new feature or submitting a patch to the project. 
    </para>

    <para>
      All patches should be created in a unified diff format.
    </para>
  </section>

</chapter>
