<!--
 * IronJacamar, a Java EE Connector Architecture implementation
 * Copyright 2008, Red Hat Inc, and individual contributors
 * as indicated by the @author tags. See the copyright.txt file in the
 * distribution for a full listing of individual contributors.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->
<project name="ironjacamar-core" 
         default="compile" 
         xmlns:ivy="antlib:org.apache.ivy.ant">

  <!-- ================================= 
       Properties              
       ================================= -->
  <property name="build.core.dir" value="${build.dir}/core" />

  <!-- ================================= 
       Target: check
       ================================= -->
  <target name="check">
    <uptodate property="core.uptodate" targetfile="${target.dir}/${name}-core-impl.jar" >
      <srcfiles dir= "src/main" includes="**/*"/>
    </uptodate>
  </target>

   <!-- ================================= 
        Target: compile
        ================================= -->
  <target name="compile" depends="check" unless="core.uptodate">
    <mkdir dir="${build.core.dir}" />
    <mkdir dir="${build.core.dir}/impl" />

    <javac srcdir="src/main"
           destdir="${build.core.dir}/impl"
           classpathref="main.lib.path.id"
           debug="${javac.debug}"
           deprecation="${javac.deprecation}"
           optimize="${javac.optimize}"
           encoding="${javac.encoding}"
           nowarn="true"
           includeAntRuntime="false">
      <compilerarg value="-Xlint"/>
      <compilerarg value="-AgeneratedTranslationFilesPath=${build.core.dir}/impl"/>
      <compilerarg value="-AtranslationFilesPath=${build.core.dir}/impl"/>
    </javac> 

    <copy file="src/main/java/org/jboss/jca/Version.java.in"
          tofile="${build.core.dir}/impl/org/jboss/jca/Version.java">
      <filterset>
        <filter token="VERSION" value="${version}"/>
      </filterset>
    </copy>

    <javac srcdir="${build.core.dir}/impl"
           destdir="${build.core.dir}/impl"
           classpathref="main.lib.path.id"
           debug="${javac.debug}"
           deprecation="${javac.deprecation}"
           optimize="${javac.optimize}"
           encoding="${javac.encoding}"
           includeAntRuntime="false">
      <compilerarg value="-Xlint"/>
    </javac> 

  </target>

  <!-- ================================= 
       Target: jars 
       ================================= -->
  <target name="jars" depends="compile">
    <copy todir="${build.core.dir}/impl">
      <fileset dir="src/main/resources"
               includes="**/*.properties"/>
    </copy>

    <jar destfile="${target.dir}/${name}-core-api.jar"
         basedir="${build.core.dir}/impl"
         index="true"
         indexMetaInf="true"
         update="true"
         level="9"
         includes="**/core/api/**, **/core/spi/**">
      <manifest>
        <attribute name="Implementation-Title" value="IronJacamar Core API"/>
        <attribute name="Implementation-Version" value="${version}"/>
        <attribute name="Implementation-Vendor" value="The IronJacamar project (http://www.ironjacamar.org)"/>
        <attribute name="Implementation-Vendor-Id" value="org.jboss"/>
      </manifest>
    </jar>

    <jar destfile="${target.dir}/${name}-core-impl.jar"
         basedir="${build.core.dir}/impl"
         index="true"
         indexMetaInf="true"
         update="true"
         level="9"
         excludes="**/*.java, **/core/api/**, **/core/spi/**">
      <manifest>
        <attribute name="Implementation-Title" value="IronJacamar Core Implementation"/>
        <attribute name="Implementation-Version" value="${version}"/>
        <attribute name="Implementation-Vendor" value="The IronJacamar project (http://www.ironjacamar.org)"/>
        <attribute name="Implementation-Vendor-Id" value="org.jboss"/>
        <attribute name="Main-Class" value="org.jboss.jca.Version"/>
      </manifest>
    </jar>
  </target>

  <!-- ================================= 
       Target: docs
       ================================= -->
  <target name="docs">
    <mkdir dir="${target.dir}/docs/core"/>
    <javadoc packagenames="org.*"
             sourcepath="src/main/java"
             destdir="${target.dir}/docs/core"
             doclet="org.jboss.apiviz.APIviz"
             docletpathref="main.lib.path.id"
             author="true"
             version="true"
             windowtitle="IronJacamar Core"
             doctitle="IronJacamar Core"
             use="true"
             additionalparam="-author -version"
             classpath="${build.core.dir}/impl"
             classpathref="main.lib.path.id"
             bottom="Copyright &amp;#169; 2013 IronJacamar (&lt;a href='http://www.ironjacamar.org'&gt;http://www.ironjacamar.org&lt;/a&gt;)">
      <link offline="true" href="http://docs.oracle.com/javase/6/docs/api/" packagelistLoc="${java.home}/../docs/api"/>
    </javadoc>
    <copy todir="${target.dir}/docs/core" overwrite="true">
      <fileset dir="${tools.dir}/api"/>
    </copy>
  </target>

  <!-- ================================= 
       Target: test
       ================================= -->
  <target name="test" depends="prepare-test">
    <mkdir dir="${reports.dir}"/>
    <mkdir dir="${reports.dir}/core"/>

    <junit dir="src/test"
           printsummary="${junit.printsummary}"
           haltonerror="${junit.haltonerror}"
           haltonfailure="${junit.haltonfailure}"
           fork="${junit.fork}"
           timeout="${junit.timeout}">
      
      <jvmarg line="${junit.jvm.options} -Djava.net.preferIPv4Stack=true -Djgroups.bind_addr=127.0.0.1"/>
      <sysproperty key="test.dir" value="${test.dir}"/>
      <sysproperty key="xb.builder.useUnorderedSequence" value="true"/>
      <sysproperty key="java.util.logging.manager" value="org.jboss.logmanager.LogManager"/>
      <sysproperty key="org.jboss.logging.Logger.pluginClass" value="org.jboss.logging.logmanager.LoggerPluginImpl"/>
      <sysproperty key="log4j.defaultInitOverride" value="true"/>
      
      <classpath>
        <pathelement location="${build.core.dir}/test"/>
        <fileset dir="${target.dir}" includes="*.jar"/>
        <fileset dir="${lib.dir}/common" includes="*.jar" />
        <fileset dir="${lib.dir}/embedded" includes="*.jar" />
        <fileset dir="${lib.dir}/arquillian" includes="*.jar" />
        <fileset dir="${lib.dir}/hornetq" includes="*.jar" />
        <fileset dir="${lib.dir}/sjc" includes="*.jar" />
        <fileset dir="${lib.dir}/test" includes="*.jar" />
      </classpath>
      
      <formatter type="plain"/>
      <formatter type="xml"/>
      
      <batchtest todir="${reports.dir}/core"
                 haltonerror="${junit.batchtest.haltonerror}"
                 haltonfailure="${junit.batchtest.haltonfailure}"
                 fork="${junit.batchtest.fork}">
        
        <fileset dir="${build.core.dir}/test">
          <include name="**/*TestCase.class"/>
          <exclude name="**/*BMTestCase.class"/>
          <exclude name="**/*MJVMTestCase.class"/>
          <exclude name="**/*CrashTestCase.class"/>
        </fileset>
      </batchtest>

    </junit>
    
    <ant target="byteman-test"/>
    <ant target="mjvm-test"/>

  </target>

  <!-- ================================= 
       Target: byteman-test
       ================================= -->
  <target name="byteman-test" unless="IBM">
    <junit dir="src/test"
           printsummary="${junit.printsummary}"
           haltonerror="${junit.haltonerror}"
           haltonfailure="${junit.haltonfailure}"
           fork="${junit.fork}"
           timeout="${junit.timeout}">
      
      <jvmarg line="${junit.jvm.options}"/>
      <sysproperty key="archives.dir" value="${build.core.dir}"/>
      <sysproperty key="java.util.logging.manager" value="org.jboss.logmanager.LogManager"/>
      <sysproperty key="log4j.defaultInitOverride" value="true"/>
      <sysproperty key="org.jboss.logging.Logger.pluginClass" value="org.jboss.logging.logmanager.LoggerPluginImpl"/>
      <sysproperty key="test.dir" value="${test.dir}"/>
      <sysproperty key="xb.builder.useUnorderedSequence" value="true"/>
      
      <classpath>
        <pathelement location="${build.core.dir}/test"/>
        <fileset dir="${target.dir}" includes="*.jar"/>
        <fileset dir="${lib.dir}/common" includes="*.jar" />
        <fileset dir="${lib.dir}/arquillian" includes="*.jar" />
        <fileset dir="${lib.dir}/embedded" includes="*.jar" />
        <fileset dir="${lib.dir}/byteman" includes="*.jar" />
        <fileset dir="${lib.dir}/hornetq" includes="*.jar" />
        <fileset dir="${lib.dir}/sjc" includes="*.jar" />
        <fileset dir="${lib.dir}/test" includes="*.jar" />
        <fileset dir="${java.home}/../lib/" includes="tools.jar" />
      </classpath>
      
      <formatter type="plain"/>
      <formatter type="xml"/>
      
      <batchtest todir="${reports.dir}/core"
                 haltonerror="${junit.batchtest.haltonerror}"
                 haltonfailure="${junit.batchtest.haltonfailure}"
                 fork="${junit.batchtest.fork}">
        
        <fileset dir="${build.core.dir}/test">
          <include name="**/*BMTestCase.class"/>
        </fileset>
      </batchtest>
    </junit>
  </target>

  <!-- ================================= 
       Target: mjvm-test
       ================================= -->
  <target name="mjvm-test" unless="no-mjvm">
    <mkdir dir="${build.core.dir}/ij" />
    <copy todir="${build.core.dir}/ij" overwrite="true">
      <fileset dir="${build.dir}/ij-template"/>
    </copy>
    <copy todir="${build.core.dir}/ij" overwrite="true">
      <fileset dir="src/test/resources/test-instance"/>
    </copy>
    <delete file="${build.core.dir}/ij/system/web.xml"/>
    <delete file="${build.core.dir}/ij/system/console.war"/>

    <jar destfile="${build.core.dir}/ij/lib/ironjacamar-test-support.jar"
         basedir="${build.core.dir}/test"
         includes="**/support/**"/>

    <path id="ant.lib.path.id">
      <fileset dir="${build.core.dir}/ij">
        <include name="**/*.jar"/>
      </fileset>
    </path>

    <taskdef name="start"
             classname="org.jboss.jca.sjc.ant.Start"
             classpathref="ant.lib.path.id"/>
    <taskdef name="ping"
             classname="org.jboss.jca.sjc.ant.Ping"
             classpathref="ant.lib.path.id"/>
    <taskdef name="stop"
             classname="org.jboss.jca.sjc.ant.Stop"
             classpathref="ant.lib.path.id"/>
    <taskdef name="deploy"
             classname="org.jboss.jca.sjc.ant.Deploy"
             classpathref="ant.lib.path.id"/>
    <taskdef name="undeploy"
             classname="org.jboss.jca.sjc.ant.Undeploy"
             classpathref="ant.lib.path.id"/>
    <taskdef name="crash"
             classname="org.jboss.jca.core.workmanager.support.Crash"
             classpathref="ant.lib.path.id"/>

    <start home="${build.core.dir}/ij" options="${build.core.dir}/ij/bin/ironjacamar.properties"/>
    <waitfor maxwait="15" maxwaitunit="second">
      <socket server="localhost" port="1303"/>
    </waitfor>
    <ping host="localhost" port="1303"/>
    <deploy host="localhost" port="1303" file="${build.core.dir}/test/work.rar"/>
    <deploy host="localhost" port="1303" file="src/test/resources/test-instance/dwm-bc-jgroups-ra.xml"/>
    <deploy host="localhost" port="1303" file="src/test/resources/test-instance/dwm-bc-socket-ra.xml"/>

    <junit dir="src/test"
           printsummary="${junit.printsummary}"
           haltonerror="${junit.haltonerror}"
           haltonfailure="${junit.haltonfailure}"
           fork="${junit.fork}"
           timeout="${junit.timeout}">
      
      <jvmarg line="${junit.jvm.options} -Djava.net.preferIPv4Stack=true -Djgroups.bind_addr=127.0.0.1"/>
      <sysproperty key="archives.dir" value="${build.core.dir}"/>
      <sysproperty key="java.util.logging.manager" value="org.jboss.logmanager.LogManager"/>
      <sysproperty key="log4j.defaultInitOverride" value="true"/>
      <sysproperty key="org.jboss.logging.Logger.pluginClass" value="org.jboss.logging.logmanager.LoggerPluginImpl"/>
      <sysproperty key="test.dir" value="${test.dir}"/>
      <sysproperty key="xb.builder.useUnorderedSequence" value="true"/>
      
      <classpath>
        <pathelement location="${build.core.dir}/test"/>
        <fileset dir="${target.dir}" includes="*.jar"/>
        <fileset dir="${lib.dir}/common" includes="*.jar" />
        <fileset dir="${lib.dir}/arquillian" includes="*.jar" />
        <fileset dir="${lib.dir}/embedded" includes="*.jar" />
        <fileset dir="${lib.dir}/byteman" includes="*.jar" />
        <fileset dir="${lib.dir}/hornetq" includes="*.jar" />
        <fileset dir="${lib.dir}/sjc" includes="*.jar" />
        <fileset dir="${lib.dir}/test" includes="*.jar" />
        <fileset dir="${java.home}/../lib/" includes="tools.jar" />
      </classpath>
      
      <formatter type="plain"/>
      <formatter type="xml"/>
      
      <batchtest todir="${reports.dir}/core"
                 haltonerror="${junit.batchtest.haltonerror}"
                 haltonfailure="${junit.batchtest.haltonfailure}"
                 fork="${junit.batchtest.fork}">
        
        <fileset dir="${build.core.dir}/test">
          <include name="**/*MJVMTestCase.class"/>
        </fileset>
      </batchtest>
    </junit>

    <undeploy host="localhost" port="1303" file="src/test/resources/test-instance/dwm-bc-socket-ra.xml"/>
    <undeploy host="localhost" port="1303" file="src/test/resources/test-instance/dwm-bc-jgroups-ra.xml"/>
    <undeploy host="localhost" port="1303" file="${build.core.dir}/test/work.rar"/>
    <stop home="${build.core.dir}/ij"/>

    <!-- Crash tests -->
    <echo message="Crash tests"/>

  </target>

  <!-- ================================= 
       Target: one-test
       ================================= -->
  <target name="one-test" depends="prepare-test">
    <mkdir dir="${reports.dir}"/>
    <mkdir dir="${reports.dir}/core"/>

    <junit dir="src/test"
           printsummary="${junit.printsummary}"
           haltonerror="${junit.haltonerror}"
           haltonfailure="${junit.haltonfailure}"
           fork="${junit.fork}"
           timeout="${junit.timeout}">
      
      <jvmarg line="${junit.jvm.options} -Djava.net.preferIPv4Stack=true -Djgroups.bind_addr=127.0.0.1"/>
      <sysproperty key="test.dir" value="${test.dir}"/>
      <sysproperty key="xb.builder.useUnorderedSequence" value="true"/>
      <sysproperty key="java.util.logging.manager" value="org.jboss.logmanager.LogManager"/>
      <sysproperty key="org.jboss.logging.Logger.pluginClass" value="org.jboss.logging.logmanager.LoggerPluginImpl"/>
      <sysproperty key="log4j.defaultInitOverride" value="true"/>
      <env key="java.net.preferIPv4Stack" value="true"/>
      
      <classpath>
        <pathelement location="${build.core.dir}/test"/>
        <fileset dir="${target.dir}" includes="*.jar"/>
        <fileset dir="${lib.dir}/common" includes="*.jar" />
        <fileset dir="${lib.dir}/embedded" includes="*.jar" />
        <fileset dir="${lib.dir}/arquillian" includes="*.jar" />
        <fileset dir="${lib.dir}/byteman" includes="*.jar" />
        <fileset dir="${lib.dir}/hornetq" includes="*.jar" />
        <fileset dir="${lib.dir}/sjc" includes="*.jar" />
        <fileset dir="${lib.dir}/test" includes="*.jar" />
        <fileset dir="${java.home}/../lib/" includes="tools.jar" />
      </classpath>
      
      <formatter type="plain"/>
      <formatter type="xml"/>
      
      <test todir="${reports.dir}/core" name="${test}"
                 haltonerror="${junit.batchtest.haltonerror}"
                 haltonfailure="${junit.batchtest.haltonfailure}"
                 fork="${junit.batchtest.fork}"/>
    </junit>
  </target>

  <!-- ================================= 
       Target: prepare-test
       ================================= -->
  <target name="prepare-test">
    <mkdir dir="${build.core.dir}" />
    <mkdir dir="${build.core.dir}/test" />

    <javac srcdir="src/test"
           destdir="${build.core.dir}/test"
           classpathref="test.lib.path.id"
           debug="${javac.debug}"
           deprecation="${javac.deprecation}"
           optimize="${javac.optimize}"
           encoding="${javac.encoding}"
           nowarn="true"
           includeAntRuntime="false">
      <compilerarg value="-Xlint"/>
    </javac> 

    <copy todir="${build.core.dir}/test">
      <fileset dir="src/test/resources"/>
    </copy>

    <jar destfile="${build.core.dir}/test/${name}-test-txmgr.jar"
         basedir="${build.core.dir}/test"
         index="true"
         indexMetaInf="true"
         update="true"
         level="9"
         includes="**/txmgr/**">
      <manifest>
        <attribute name="Implementation-Title" value="IronJacamar Test - Transaction Manager"/>
        <attribute name="Implementation-Version" value="${version}"/>
        <attribute name="Implementation-Vendor" value="The IronJacamar project (http://www.ironjacamar.org)"/>
        <attribute name="Implementation-Vendor-Id" value="org.jboss"/>
      </manifest>
    </jar>

    <copy todir="${build.core.dir}/test" flatten="true">
      <fileset dir="${lib.dir}/hornetq">
        <include name="**/*.rar"/>
      </fileset>
    </copy>

    <!-- Reauth CRI resource adapter -->
    <jar destfile="${build.core.dir}/test/reauth-cri.jar"
         basedir="${build.core.dir}/test"
         index="true"
         indexMetaInf="true"
         update="true"
         level="9"
         includes="**/reauth/ra/cri/**">
      <manifest>
        <attribute name="Implementation-Title" value="IronJacamar Test - Reauth CRI"/>
        <attribute name="Implementation-Version" value="${version}"/>
        <attribute name="Implementation-Vendor" value="The IronJacamar project (http://www.ironjacamar.org)"/>
        <attribute name="Implementation-Vendor-Id" value="org.jboss"/>
      </manifest>
    </jar>
    <jar destfile="${build.core.dir}/test/reauth-cri.rar"
         index="true"
         indexMetaInf="true"
         update="true"
         level="9">
      <manifest>
        <attribute name="Implementation-Title" value="IronJacamar Test - Reauth CRI RAR"/>
        <attribute name="Implementation-Version" value="${version}"/>
        <attribute name="Implementation-Vendor" value="The IronJacamar project (http://www.ironjacamar.org)"/>
        <attribute name="Implementation-Vendor-Id" value="org.jboss"/>
      </manifest>
      <fileset dir="${build.core.dir}/test">
        <include name="reauth-cri.jar"/>
      </fileset>
      <fileset dir="${build.core.dir}/test/rars/security/reauth/cri"/>
    </jar>

    <!-- Reauth Subject resource adapter -->
    <jar destfile="${build.core.dir}/test/reauth-subject.jar"
         basedir="${build.core.dir}/test"
         index="true"
         indexMetaInf="true"
         update="true"
         level="9"
         includes="**/reauth/ra/subject/**">
      <manifest>
        <attribute name="Implementation-Title" value="IronJacamar Test - Reauth Subject"/>
        <attribute name="Implementation-Version" value="${version}"/>
        <attribute name="Implementation-Vendor" value="The IronJacamar project (http://www.ironjacamar.org)"/>
        <attribute name="Implementation-Vendor-Id" value="org.jboss"/>
      </manifest>
    </jar>
    <jar destfile="${build.core.dir}/test/reauth-subject.rar"
         index="true"
         indexMetaInf="true"
         update="true"
         level="9">
      <manifest>
        <attribute name="Implementation-Title" value="IronJacamar Test - Reauth CRI RAR"/>
        <attribute name="Implementation-Version" value="${version}"/>
        <attribute name="Implementation-Vendor" value="The IronJacamar project (http://www.ironjacamar.org)"/>
        <attribute name="Implementation-Vendor-Id" value="org.jboss"/>
      </manifest>
      <fileset dir="${build.core.dir}/test">
        <include name="reauth-subject.jar"/>
      </fileset>
      <fileset dir="${build.core.dir}/test/rars/security/reauth/subject"/>
    </jar>

    <!-- Pure inflow resource adapter -->
    <jar destfile="${build.core.dir}/test/pure-inflow.jar"
         basedir="${build.core.dir}/test"
         index="true"
         indexMetaInf="true"
         update="true"
         level="9"
         includes="**/inflow/ra/**">
      <manifest>
        <attribute name="Implementation-Title" value="IronJacamar Test - Pure inflow"/>
        <attribute name="Implementation-Version" value="${version}"/>
        <attribute name="Implementation-Vendor" value="The IronJacamar project (http://www.ironjacamar.org)"/>
        <attribute name="Implementation-Vendor-Id" value="org.jboss"/>
      </manifest>
    </jar>
    <jar destfile="${build.core.dir}/test/pure-inflow.rar"
         index="true"
         indexMetaInf="true"
         update="true"
         level="9">
      <manifest>
        <attribute name="Implementation-Title" value="IronJacamar Test - Pure inflow RAR"/>
        <attribute name="Implementation-Version" value="${version}"/>
        <attribute name="Implementation-Vendor" value="The IronJacamar project (http://www.ironjacamar.org)"/>
        <attribute name="Implementation-Vendor-Id" value="org.jboss"/>
      </manifest>
      <fileset dir="${build.core.dir}/test">
        <include name="pure-inflow.jar"/>
      </fileset>
      <fileset dir="${build.core.dir}/test/rars/inflow"/>
    </jar>

    <!-- Work resource adapter -->
    <jar destfile="${build.core.dir}/test/work.jar"
         basedir="${build.core.dir}/test"
         index="true"
         indexMetaInf="true"
         update="true"
         level="9"
         includes="**/workmanager/rars/dwm/**">
      <manifest>
        <attribute name="Implementation-Title" value="IronJacamar Test - Work"/>
        <attribute name="Implementation-Version" value="${version}"/>
        <attribute name="Implementation-Vendor" value="The IronJacamar project (http://www.ironjacamar.org)"/>
        <attribute name="Implementation-Vendor-Id" value="org.jboss"/>
      </manifest>
    </jar>
    <jar destfile="${build.core.dir}/test/work.rar"
         index="true"
         indexMetaInf="true"
         update="true"
         level="9">
      <manifest>
        <attribute name="Implementation-Title" value="IronJacamar Test - Work RAR"/>
        <attribute name="Implementation-Version" value="${version}"/>
        <attribute name="Implementation-Vendor" value="The IronJacamar project (http://www.ironjacamar.org)"/>
        <attribute name="Implementation-Vendor-Id" value="org.jboss"/>
      </manifest>
      <fileset dir="${build.core.dir}/test">
        <include name="work.jar"/>
      </fileset>
      <fileset dir="${build.core.dir}/test/rars/dwm"/>
    </jar>

  </target>

  <!-- ================================= 
       Target: artifacts
       ================================= -->
  <target name="artifacts" depends="jars">

    <jar destfile="${target.dir}/${name}-core-api-sources.jar"
         basedir="src/main/java"
         index="true"
         indexMetaInf="true"
         update="true"
         level="9"
         includes="**/core/api/**,**/core/spi/**">
      <manifest>
        <attribute name="Implementation-Title" value="IronJacamar Core API - Sources"/>
        <attribute name="Implementation-Version" value="${version}"/>
        <attribute name="Implementation-Vendor" value="The IronJacamar project (http://www.ironjacamar.org)"/>
        <attribute name="Implementation-Vendor-Id" value="org.jboss"/>
      </manifest>
    </jar>

    <jar destfile="${target.dir}/${name}-core-impl-sources.jar"
         index="true"
         indexMetaInf="true"
         update="true"
         level="9">
      <fileset dir="src/main/java"
               excludes="**/core/api/**,**/core/spi/**"/>
      <fileset dir="${build.core.dir}/impl"
               includes="**/*.java"/>
      <manifest>
        <attribute name="Implementation-Title" value="IronJacamar Core Implementation - Sources"/>
        <attribute name="Implementation-Version" value="${version}"/>
        <attribute name="Implementation-Vendor" value="The IronJacamar project (http://www.ironjacamar.org)"/>
        <attribute name="Implementation-Vendor-Id" value="org.jboss"/>
      </manifest>
    </jar>

    <mkdir dir="${build.core.dir}/docs"/>
    <mkdir dir="${build.core.dir}/docs/api"/>
    <javadoc destdir="${build.core.dir}/docs/api"
             doclet="org.jboss.apiviz.APIviz"
             docletpathref="main.lib.path.id"
             author="true"
             version="true"
             windowtitle="IronJacamar Core - API"
             doctitle="IronJacamar Core - API"
             use="true"
             additionalparam="-author -version"
             classpath="${build.core.dir}"
             classpathref="main.lib.path.id"
             bottom="Copyright &amp;#169; 2013 IronJacamar (&lt;a href='http://www.ironjacamar.org'&gt;http://www.ironjacamar.org&lt;/a&gt;)">

      <packageset dir="src/main/java" defaultexcludes="yes">
        <include name="**/core/api/**"/>
        <include name="**/core/spi/**"/>
      </packageset>

      <link offline="true" href="http://docs.oracle.com/javase/6/docs/api/" packagelistLoc="${java.home}/../docs/api"/>
    </javadoc>
    <copy todir="${build.core.dir}/docs/api" overwrite="true">
      <fileset dir="${tools.dir}/api"/>
    </copy>

    <jar destfile="${target.dir}/${name}-core-api-javadoc.jar"
         basedir="${build.core.dir}/docs/api"
         index="true"
         indexMetaInf="true"
         update="true"
         level="9">
      <manifest>
        <attribute name="Implementation-Title" value="IronJacamar Core API - JavaDoc"/>
        <attribute name="Implementation-Version" value="${version}"/>
        <attribute name="Implementation-Vendor" value="The IronJacamar project (http://www.ironjacamar.org)"/>
        <attribute name="Implementation-Vendor-Id" value="org.jboss"/>
      </manifest>
    </jar>

    <mkdir dir="${build.core.dir}/docs/impl"/>
    <javadoc destdir="${build.core.dir}/docs/impl"
             doclet="org.jboss.apiviz.APIviz"
             docletpathref="main.lib.path.id"
             author="true"
             version="true"
             windowtitle="IronJacamar Core - Implementation"
             doctitle="IronJacamar Core - Implementation"
             use="true"
             additionalparam="-author -version"
             classpath="${build.core.dir}"
             classpathref="main.lib.path.id"
             bottom="Copyright &amp;#169; 2013 IronJacamar (&lt;a href='http://www.ironjacamar.org'&gt;http://www.ironjacamar.org&lt;/a&gt;)">

      <packageset dir="src/main/java" defaultexcludes="yes">
        <exclude name="**/core/api/**"/>
        <exclude name="**/core/spi/**"/>
      </packageset>

      <link offline="true" href="http://docs.oracle.com/javase/6/docs/api/" packagelistLoc="${java.home}/../docs/api"/>
    </javadoc>
    <copy todir="${build.core.dir}/docs/impl" overwrite="true">
      <fileset dir="${tools.dir}/api"/>
    </copy>

    <jar destfile="${target.dir}/${name}-core-impl-javadoc.jar"
         basedir="${build.core.dir}/docs/impl"
         index="true"
         indexMetaInf="true"
         update="true"
         level="9">
      <manifest>
        <attribute name="Implementation-Title" value="IronJacamar Core Implementation - JavaDoc"/>
        <attribute name="Implementation-Version" value="${version}"/>
        <attribute name="Implementation-Vendor" value="The IronJacamar project (http://www.ironjacamar.org)"/>
        <attribute name="Implementation-Vendor-Id" value="org.jboss"/>
      </manifest>
    </jar>

  </target>

</project>
