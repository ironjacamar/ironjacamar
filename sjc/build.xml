<!--
 * IronJacamar, a Java EE Connector Architecture implementation
 * Copyright 2008, Red Hat Inc, and individual contributors
 * as indicated by the @author tags. See the copyright.txt file in the
 * distribution for a full listing of individual contributors.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->
<project name="ironjacamar-sjc" 
         default="compile" 
         xmlns:ivy="antlib:org.apache.ivy.ant">

  <!-- ================================= 
       Properties              
       ================================= -->
  <property name="build.sjc.dir" value="${build.dir}/sjc" />

  <!-- ================================= 
       Target: init
       ================================= -->
  <target name="init">
    <mkdir dir="${build.sjc.dir}" />
    <mkdir dir="${build.sjc.dir}/impl" />
    <mkdir dir="${build.sjc.dir}/impl/META-INF/maven" />
  </target>

  <!-- ================================= 
       Target: check
       ================================= -->
  <target name="check">
    <uptodate property="sjc.uptodate" targetfile="${target.dir}/${name}-sjc.jar" >
      <srcfiles dir= "src/main" includes="**/*"/>
    </uptodate>
  </target>

  <!-- ================================= 
       Target: compile
       ================================= -->
  <target name="compile" depends="init,check" unless="sjc.uptodate">
    <javac srcdir="src/main"
           destdir="${build.sjc.dir}/impl"
           classpathref="main.lib.path.id"
           debug="${javac.debug}"
           deprecation="${javac.deprecation}"
           optimize="${javac.optimize}"
           encoding="${javac.encoding}"
           includeAntRuntime="false">
      <compilerarg value="-Xlint"/>
    </javac> 
  </target>

  <!-- ================================= 
       Target: jars 
       ================================= -->
  <target name="jars" depends="compile">
    <copy todir="${build.sjc.dir}/impl/META-INF/maven">
      <fileset dir="src/main/resources/"
               includes="plugin.xml"/>
      <filterset>
        <filter token="VERSION.IRONJACAMAR" value="${version}"/>
      </filterset>
    </copy>

    <copy todir="${build.sjc.dir}/impl/org/jboss/jca/sjc/ant">
      <fileset dir="src/main/resources/"
               includes="antlib.xml"/>
      <filterset>
        <filter token="VERSION.IRONJACAMAR" value="${version}"/>
      </filterset>
    </copy>

    <jar destfile="${target.dir}/${name}-sjc.jar"
         basedir="${build.sjc.dir}/impl"
         index="true"
         indexMetaInf="true"
         update="true"
         level="9">
      <manifest>
        <attribute name="Implementation-Title" value="IronJacamar SJC"/>
        <attribute name="Implementation-Version" value="${version}"/>
        <attribute name="Implementation-Vendor" value="The IronJacamar project (http://www.ironjacamar.org)"/>
        <attribute name="Implementation-Vendor-Id" value="org.jboss"/>
        <attribute name="Main-Class" value="org.jboss.jca.sjc.Main"/>
      </manifest>
    </jar>
  </target>

  <!-- ================================= 
       Target: docs
       ================================= -->
  <target name="docs">
    <mkdir dir="${target.dir}/docs/sjc"/>
    <javadoc packagenames="org.*"
             sourcepath="src/main/java"
             destdir="${target.dir}/docs/sjc"
             doclet="org.jboss.apiviz.APIviz"
             docletpathref="main.lib.path.id"
             author="true"
             version="true"
             windowtitle="IronJacamar SJC"
             doctitle="IronJacamar SJC"
             use="true"
             additionalparam="-author -version"
             classpath="${build.sjc.dir}/impl"
             classpathref="main.lib.path.id"
             bottom="Copyright &amp;#169; 2013 IronJacamar (&lt;a href='http://www.ironjacamar.org'&gt;http://www.ironjacamar.org&lt;/a&gt;)">
      <link offline="true" href="http://docs.oracle.com/javase/6/docs/api/" packagelistLoc="${java.home}/../docs/api"/>
    </javadoc>
    <copy todir="${target.dir}/docs/sjc" overwrite="true">
      <fileset dir="${tools.dir}/api"/>
    </copy>
  </target>

  <!-- ================================= 
       Target: prepare-test
       ================================= -->
  <target name="prepare-test">
    <mkdir dir="${build.dir}/ij-template"/>
    <mkdir dir="${build.dir}/ij-template/bin"/>
    <mkdir dir="${build.dir}/ij-template/config"/>
    <mkdir dir="${build.dir}/ij-template/config/bootstrap"/>
    <mkdir dir="${build.dir}/ij-template/lib"/>
    <mkdir dir="${build.dir}/ij-template/lib/embedded"/>
    <mkdir dir="${build.dir}/ij-template/lib/embedded/arquillian"/>
    <mkdir dir="${build.dir}/ij-template/lib/embedded/arquillian/byteman"/>
    <mkdir dir="${build.dir}/ij-template/lib/endorsed"/>
    <mkdir dir="${build.dir}/ij-template/lib/jetty"/>
    <mkdir dir="${build.dir}/ij-template/log"/>
    <mkdir dir="${build.dir}/ij-template/deploy"/>
    <mkdir dir="${build.dir}/ij-template/system"/>

    <copy todir="${build.dir}/ij-template/bin">
      <fileset dir="src/main/resources/">
        <include name="**/*.sh"/>
        <include name="**/*.bat"/>
      </fileset>
    </copy>

    <!-- Build a ${name}-sjc.jar containing all dependencies -->
    <mkdir dir="${build.sjc.dir}/tmp"/>
    <unjar src="${lib.dir}/sjc/fungal.jar" dest="${build.sjc.dir}/tmp"/>
    <unjar src="${target.dir}/${name}-sjc.jar" dest="${build.sjc.dir}/tmp"/>
    <jar destfile="${build.dir}/ij-template/bin/${name}-sjc.jar"
         manifest="${build.sjc.dir}/tmp/META-INF/MANIFEST.MF"
         basedir="${build.sjc.dir}/tmp"
         index="true"
         indexMetaInf="true"
         update="true"
         level="9"/>
    <delete dir="${build.sjc.dir}/tmp"/>

    <copy todir="${build.dir}/ij-template/config">
      <fileset dir="src/main/resources">
        <include name="*.xml"/>
        <include name="*.xsd"/>
        <exclude name="antlib.xml"/>
        <exclude name="plugin.xml"/>
      </fileset>
    </copy>

    <copy todir="${build.dir}/ij-template/config">
      <fileset dir="src/main/resources/">
        <include name="*.properties"/>
      </fileset>
    </copy>

    <copy todir="${build.dir}/ij-template/config/bootstrap">
      <fileset dir="src/main/resources/bootstrap">
        <include name="*.xml"/>
      </fileset>
    </copy>

    <copy todir="${build.dir}/ij-template/system">
      <fileset dir="src/main/resources/system">
        <include name="*.xml"/>
      </fileset>
    </copy>

    <copy todir="${build.dir}/ij-template/system">
      <fileset dir="${target.dir}">
        <include name="jdbc-local.rar"/>
        <include name="jdbc-xa.rar"/>
      </fileset>
    </copy>

    <copy todir="${build.dir}/ij-template/lib">
      <fileset dir="${target.dir}">
        <include name="*.jar"/>
        <exclude name="${name}-as.jar"/>
        <exclude name="${name}-codegenerator.jar"/>
        <exclude name="${name}-eclipse.jar"/>
        <exclude name="${name}-arquillian-embedded.jar"/>
        <exclude name="${name}-arquillian-embedded-byteman.jar"/>
        <exclude name="${name}-embedded.jar"/>
        <exclude name="${name}-sjc.jar"/>
        <exclude name="${name}-test-eis.jar"/>
        <exclude name="${name}-web-console.jar"/>
      </fileset>
    </copy>

    <copy todir="${build.dir}/ij-template/lib/embedded">
      <fileset dir="${target.dir}">
        <include name="${name}-embedded.jar"/>
      </fileset>
    </copy>

    <copy todir="${build.dir}/ij-template/lib/embedded/arquillian">
      <fileset dir="${target.dir}">
        <include name="${name}-arquillian-embedded.jar"/>
      </fileset>
    </copy>

    <copy todir="${build.dir}/ij-template/lib/embedded/arquillian/byteman">
      <fileset dir="${target.dir}">
        <include name="${name}-arquillian-embedded-byteman.jar"/>
      </fileset>
    </copy>

    <copy todir="${build.dir}/ij-template/lib">
      <fileset dir="${lib.dir}/common">
        <include name="*.jar"/>
        <exclude name="jdeparser.jar"/>
        <exclude name="jboss-logging-generator.jar"/>
        <exclude name="jboss-logging-processor.jar"/>
      </fileset>
    </copy>

    <copy todir="${build.dir}/ij-template/lib">
      <fileset dir="${lib.dir}/sjc">
        <include name="fungal-cli.jar"/>
      </fileset>
    </copy>

    <copy todir="${build.dir}/ij-template/lib/embedded">
      <fileset dir="${lib.dir}/embedded">
        <include name="*.jar"/>
      </fileset>
    </copy>

    <copy todir="${build.dir}/ij-template/lib/embedded/arquillian">
      <fileset dir="${lib.dir}/arquillian">
        <include name="arquillian*.jar"/>
      </fileset>
    </copy>

    <copy todir="${build.dir}/ij-template/lib/embedded/arquillian">
      <fileset dir="${lib.dir}/test">
        <include name="junit.jar"/>
      </fileset>
    </copy>

    <copy todir="${build.dir}/ij-template/lib/embedded/arquillian/byteman">
      <fileset dir="${lib.dir}/byteman">
        <include name="*.jar"/>
      </fileset>
    </copy>

    <copy todir="${build.dir}/ij-template/lib/jetty">
      <fileset dir="${lib.dir}/jetty">
        <include name="*.jar"/>
      </fileset>
    </copy>

    <copy todir="${build.dir}/ij-template/system">
      <fileset dir="${target.dir}">
        <include name="*.war"/>
      </fileset>
    </copy>

    <chmod dir="${build.dir}/ij-template/bin" perm="ugo+rx" includes="**/*.sh"/>

  </target>

  <!-- ================================= 
       Target: test
       ================================= -->
  <target name="test">
    <path id="main.lib.path.id">
      <fileset dir="../target/">
        <include name="*.jar"/>
      </fileset>
    </path>

    <taskdef name="start"
             classname="org.jboss.jca.sjc.ant.Start"
             classpathref="main.lib.path.id"/>
    <taskdef name="ping"
             classname="org.jboss.jca.sjc.ant.Ping"
             classpathref="main.lib.path.id"/>
    <taskdef name="stop"
             classname="org.jboss.jca.sjc.ant.Stop"
             classpathref="main.lib.path.id"/>

    <start home="../target/sjc"/>
    <waitfor maxwait="3" maxwaitunit="second">
      <socket server="localhost" port="1202"/>
    </waitfor>
    <ping host="localhost" port="1202"/>
    <stop home="../target/sjc"/>

  </target>

  <!-- ================================= 
       Target: sjc
       ================================= -->
  <target name="sjc">
    <mkdir dir="${target.dir}/sjc"/>
    <mkdir dir="${target.dir}/sjc/bin"/>
    <mkdir dir="${target.dir}/sjc/config"/>
    <mkdir dir="${target.dir}/sjc/config/bootstrap"/>
    <mkdir dir="${target.dir}/sjc/doc"/>
    <mkdir dir="${target.dir}/sjc/doc/as"/>
    <mkdir dir="${target.dir}/sjc/doc/codegenerator"/>
    <mkdir dir="${target.dir}/sjc/doc/datasources"/>
    <mkdir dir="${target.dir}/sjc/doc/eis"/>
    <mkdir dir="${target.dir}/sjc/doc/validator"/>
    <mkdir dir="${target.dir}/sjc/doc/licenses"/>
    <mkdir dir="${target.dir}/sjc/lib"/>
    <mkdir dir="${target.dir}/sjc/lib/embedded"/>
    <mkdir dir="${target.dir}/sjc/lib/embedded/arquillian"/>
    <mkdir dir="${target.dir}/sjc/lib/embedded/arquillian/byteman"/>
    <mkdir dir="${target.dir}/sjc/lib/endorsed"/>
    <mkdir dir="${target.dir}/sjc/lib/jetty"/>
    <mkdir dir="${target.dir}/sjc/log"/>
    <mkdir dir="${target.dir}/sjc/deploy"/>
    <mkdir dir="${target.dir}/sjc/system"/>

    <copy todir="${target.dir}/sjc/bin">
      <fileset dir="src/main/resources/">
        <include name="**/*.sh"/>
        <include name="**/*.bat"/>
      </fileset>
    </copy>

    <!-- Build a ${name}-sjc.jar containing all dependencies -->
    <mkdir dir="${build.sjc.dir}/tmp"/>
    <unjar src="${lib.dir}/sjc/fungal.jar" dest="${build.sjc.dir}/tmp"/>
    <unjar src="${target.dir}/${name}-sjc.jar" dest="${build.sjc.dir}/tmp"/>
    <jar destfile="${target.dir}/sjc/bin/${name}-sjc.jar"
         manifest="${build.sjc.dir}/tmp/META-INF/MANIFEST.MF"
         basedir="${build.sjc.dir}/tmp"
         index="true"
         indexMetaInf="true"
         update="true"
         level="9"/>
    <delete dir="${build.sjc.dir}/tmp"/>

    <copy todir="${target.dir}/sjc/config">
      <fileset dir="src/main/resources">
        <include name="*.xml"/>
        <include name="*.xsd"/>
        <exclude name="antlib.xml"/>
        <exclude name="plugin.xml"/>
      </fileset>
    </copy>

    <copy todir="${target.dir}/sjc/config">
      <fileset dir="src/main/resources/">
        <include name="*.properties"/>
      </fileset>
    </copy>

    <copy todir="${target.dir}/sjc/config/bootstrap">
      <fileset dir="src/main/resources/bootstrap">
        <include name="*.xml"/>
      </fileset>
    </copy>

    <copy todir="${target.dir}/sjc/system">
      <fileset dir="src/main/resources/system">
        <include name="*.xml"/>
      </fileset>
    </copy>

    <copy todir="${target.dir}/sjc/system">
      <fileset dir="${target.dir}">
        <include name="jdbc-local.rar"/>
        <include name="jdbc-xa.rar"/>
      </fileset>
    </copy>

    <copy todir="${target.dir}/sjc/lib">
      <fileset dir="${target.dir}">
        <include name="*.jar"/>
        <exclude name="${name}-as.jar"/>
        <exclude name="${name}-codegenerator.jar"/>
        <exclude name="${name}-eclipse.jar"/>
        <exclude name="${name}-arquillian-embedded.jar"/>
        <exclude name="${name}-arquillian-embedded-byteman.jar"/>
        <exclude name="${name}-embedded.jar"/>
        <exclude name="${name}-sjc.jar"/>
        <exclude name="${name}-test-eis.jar"/>
        <exclude name="${name}-web-console.jar"/>
      </fileset>
    </copy>

    <copy todir="${target.dir}/sjc/lib/embedded">
      <fileset dir="${target.dir}">
        <include name="${name}-embedded.jar"/>
      </fileset>
    </copy>

    <copy todir="${target.dir}/sjc/lib/embedded/arquillian">
      <fileset dir="${target.dir}">
        <include name="${name}-arquillian-embedded.jar"/>
      </fileset>
    </copy>

    <copy todir="${target.dir}/sjc/lib/embedded/arquillian/byteman">
      <fileset dir="${target.dir}">
        <include name="${name}-arquillian-embedded-byteman.jar"/>
      </fileset>
    </copy>

    <copy todir="${target.dir}/sjc/lib">
      <fileset dir="${lib.dir}/common">
        <include name="*.jar"/>
        <exclude name="jdeparser.jar"/>
        <exclude name="jboss-logging-generator.jar"/>
        <exclude name="jboss-logging-processor.jar"/>
      </fileset>
    </copy>

    <copy todir="${target.dir}/sjc/lib">
      <fileset dir="${lib.dir}/sjc">
        <include name="fungal-cli.jar"/>
      </fileset>
    </copy>

    <copy todir="${target.dir}/sjc/lib/embedded">
      <fileset dir="${lib.dir}/embedded">
        <include name="*.jar"/>
      </fileset>
    </copy>

    <copy todir="${target.dir}/sjc/lib/embedded/arquillian">
      <fileset dir="${lib.dir}/arquillian">
        <include name="arquillian*.jar"/>
      </fileset>
    </copy>

    <copy todir="${target.dir}/sjc/lib/embedded/arquillian">
      <fileset dir="${lib.dir}/test">
        <include name="junit.jar"/>
      </fileset>
    </copy>

    <copy todir="${target.dir}/sjc/lib/embedded/arquillian/byteman">
      <fileset dir="${lib.dir}/byteman">
        <include name="*.jar"/>
      </fileset>
    </copy>

    <copy todir="${target.dir}/sjc/lib/jetty">
      <fileset dir="${lib.dir}/jetty">
        <include name="*.jar"/>
      </fileset>
    </copy>

    <copy todir="${target.dir}/sjc/system">
      <fileset dir="${target.dir}">
        <include name="*.war"/>
      </fileset>
    </copy>

    <copy todir="${target.dir}/sjc/doc/" flatten="true">
      <fileset dir="../common/src/main/resources/">
        <include name="dtd/connector_1_0.dtd"/>
        <include name="schema/connector_1_5.xsd"/>
        <include name="schema/connector_1_6.xsd"/>
        <include name="schema/connector_1_7.xsd"/>
        <include name="schema/datasources_1_0.xsd"/>
        <include name="schema/datasources_1_1.xsd"/>
        <include name="schema/datasources_1_2.xsd"/>
        <include name="schema/resource-adapters_1_0.xsd"/>
        <include name="schema/resource-adapters_1_1.xsd"/>
        <include name="schema/ironjacamar_1_0.xsd"/>
        <include name="schema/ironjacamar_1_1.xsd"/>
        <include name="schema/j2ee_1_4.xsd"/>
        <include name="schema/javaee_6.xsd"/>
        <include name="schema/javaee_7.xsd"/>
      </fileset>
    </copy>

    <copy todir="${target.dir}/sjc/doc/as">
      <fileset dir="${target.dir}">
        <include name="${name}-as.jar"/>
      </fileset>
    </copy>
    <copy todir="${target.dir}/sjc/doc/as">
      <fileset dir="../as/src/main/resources/">
        <include name="**/*.sh"/>
        <include name="**/*.bat"/>
      </fileset>
    </copy>

    <copy todir="${target.dir}/sjc/doc/datasources" flatten="true">
      <fileset dir="../common/src/test/resources/ds/example">
        <include name="*.xml"/>
      </fileset>
    </copy>

    <copy todir="${target.dir}/sjc/doc/eis" flatten="true">
      <fileset dir="${target.dir}">
        <include name="${name}-test-eis.jar"/>
      </fileset>
    </copy>

    <copy todir="${target.dir}/sjc/doc/licenses" flatten="true">
      <fileset dir="../doc/licenses">
        <include name="*"/>
      </fileset>
    </copy>

    <copy todir="${target.dir}/sjc/doc/codegenerator">
      <fileset dir="../codegenerator/src/main/resources/">
        <include name="**/*.sh"/>
        <include name="**/*.bat"/>
      </fileset>
    </copy>

    <copy todir="${target.dir}/sjc/doc/validator">
      <fileset dir="../validator/src/main/resources/">
        <include name="**/*.sh"/>
        <include name="**/*.bat"/>
        <include name="**/pom.xml"/>
      </fileset>
      <filterset>
        <filter token="VERSION.IRONJACAMAR" value="${version}"/>
      </filterset>
    </copy>

    <copy todir="${target.dir}/sjc/doc/codegenerator">
      <fileset dir="${target.dir}">
        <include name="${name}-codegenerator.jar"/>
      </fileset>
    </copy>

    <copy todir="${target.dir}/sjc/doc/samples">
      <fileset dir="../doc/samples"/>
    </copy>

    <chmod dir="${target.dir}/sjc/bin" perm="ugo+rx" includes="**/*.sh"/>
    <chmod dir="${target.dir}/sjc/doc/as" perm="ugo+rx" includes="**/*.sh"/>
    <chmod dir="${target.dir}/sjc/doc/codegenerator" perm="ugo+rx" includes="**/*.sh"/>
    <chmod dir="${target.dir}/sjc/doc/validator" perm="ugo+rx" includes="**/*.sh"/>

  </target>

  <!-- ================================= 
       Target: war
       ================================= -->
  <target name="war" depends="compile">
    <mkdir dir="${build.dir}/sjc/war"/>
    <mkdir dir="${build.dir}/sjc/war/api"/>
    <mkdir dir="${build.dir}/sjc/war/userguide"/>
    <mkdir dir="${build.dir}/sjc/war/developerguide"/>

    <ant dir="${api.dir}" inheritRefs="true" target="docs"/>
    <move todir="${build.dir}/sjc/war/api">
      <fileset dir="${target.dir}/docs/spec">
        <include name="**/*"/>
      </fileset>
    </move>

    <ant dir="${doc.dir}/developerguide" target="html" inheritRefs="false" inheritAll="false"/>
    <ant dir="${doc.dir}/userguide" target="html" inheritRefs="false" inheritAll="false"/>
    <copy todir="${build.dir}/sjc/war/userguide">
      <fileset dir="${target.dir}/docs/userguide/en-US/html">
        <include name="**/*"/>
      </fileset>
    </copy>
    <copy todir="${build.dir}/sjc/war/developerguide">
      <fileset dir="${target.dir}/docs/developerguide/en-US/html">
        <include name="**/*"/>
      </fileset>
    </copy>

    <copy todir="${build.dir}/sjc/war">
      <fileset dir="src/main/resources/root/">
        <include name="**/*"/>
      </fileset>
    </copy>

    <war destfile="${target.dir}/root.war"
         needxmlfile="false">
      <fileset dir="${build.dir}/sjc/war"/>
    </war>

    <delete dir="${build.dir}/en-US"/>

    <copy todir="${target.dir}/sjc/system">
      <fileset dir="${target.dir}">
        <include name="*.war"/>
      </fileset>
    </copy>

  </target>

</project>
